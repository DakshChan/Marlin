#
# Marlin Firmware
# PlatformIO Configuration File
#
# For detailed documentation with EXAMPLES:
#
# https://docs.platformio.org/en/latest/projectconf.html
#

# Automatic targets - enable auto-uploading
#targets = upload

#
# By default platformio build will abort after 5 errors.
# Remove '-fmax-errors=5' from build_flags below to see all.
#

[platformio]
src_dir      = Marlin
boards_dir   = buildroot/share/PlatformIO/boards
default_envs = STM32F103RC_btt_512K
include_dir  = Marlin

#
# The 'common' values are used for most Marlin builds
#
[common]
default_src_filter = +<src/*> -<src/config> -<src/HAL> +<src/HAL/shared> -<src/lcd/extui/lib/mks_ui>
                     -<src/lcd/menu> -<src/lcd/dwin> -<src/lcd/extui/lib/dgus> -<src/lcd/extui/lib/ftdi_eve_touch_ui> -<src/lcd/dogm>
extra_scripts      =
    pre:buildroot/share/PlatformIO/scripts/common-features-dependencies.py
    pre:buildroot/share/PlatformIO/scripts/common-cxxflags.py
build_flags        = -fmax-errors=5 -g -D__MARLIN_FIRMWARE__ -fmerge-all-constants
lib_deps           =

#
# Feature Dependencies
#
[features]
TFT_LVGL_UI         = MKS-LittlevGL=https://github.com/makerbase-mks/MKS-LittlevGL/archive/master.zip
                      src_filter=+<src/lcd/extui/lib/mks_ui>
HAS_TRINAMIC_CONFIG = TMCStepper@~0.7.1
SR_LCD_3W_NL        = SailfishLCD=https://github.com/mikeshub/SailfishLCD/archive/master.zip
DIGIPOT_MCP4...     = SlowSoftI2CMaster
HAS_TMC26X          = TMC26XStepper=https://github.com/trinamic/TMC26XStepper/archive/master.zip
HAS_L64XX           = Arduino-L6470@0.8.0
NEOPIXEL_LED        = Adafruit NeoPixel@1.5.0
MAX6675_IS_MAX31865 = Adafruit MAX31865 library@~1.1.0
HAS_GRAPHICAL_LCD   = U8glib-HAL@0.4.1
                      src_filter=+<src/lcd/dogm>
USES_LIQUIDCRYSTAL  = LiquidCrystal@1.5.0
USES_LIQUIDTWI2     = LiquidTWI2@1.2.7
TOUCH_UI_FTDI_EVE   = src_filter=+<src/lcd/extui/lib/ftdi_eve_touch_ui>
HAS_DGUS_LCD        = src_filter=+<src/lcd/extui/lib/dgus>
DWIN_CREALITY_LCD   = src_filter=+<src/lcd/dwin>
HAS_LCD_MENU        = src_filter=+<src/lcd/menu>
(ESP32_)?WIFISUPPORT = AsyncTCP, ESP Async WebServer
                       ESP3DLib=https://github.com/luc-github/ESP3DLib.git
                       arduinoWebSockets=https://github.com/Links2004/arduinoWebSockets.git
                       ESP32SSDP=https://github.com/luc-github/ESP32SSDP.git
                       lib_ignore=ESPAsyncTCP

#
# Default values apply to all 'env:' prefixed environments
#
[env]
framework     = arduino
extra_scripts = ${common.extra_scripts}
build_flags   = ${common.build_flags}
lib_deps      = ${common.lib_deps}
monitor_speed = 250000

#################################
#                               #
#   Unique Core Architectures   #
#                               #
#  Add a new "env" below if no  #
# entry has values suitable to  #
#   build for a given board.    #
#                               #
#################################

#################################
#                               #
#      STM32 Architecture       #
#                               #
#################################

#
# HAL/STM32 Base Environment values
#
[common_stm32]
platform      = ststm32@~6.1.0
platform_packages = framework-arduinoststm32@>=4.10700,<4.10800
lib_ignore    = SoftwareSerial
build_flags   = ${common.build_flags}
                -IMarlin/src/HAL/STM32 -std=gnu++14
                -DUSBCON -DUSBD_USE_CDC
                -DUSBD_VID=0x0483
                -DTIM_IRQ_PRIO=13
build_unflags = -std=gnu++11
src_filter    = ${common.default_src_filter} +<src/HAL/STM32>

#
# HAL/STM32F1 Common Environment values
#
[common_stm32f1]
platform      = ${common_stm32.platform}
build_flags   = !python Marlin/src/HAL/STM32F1/build_flags.py
                ${common.build_flags} -std=gnu++14 -DHAVE_SW_SERIAL
build_unflags = -std=gnu++11
src_filter    = ${common.default_src_filter} +<src/HAL/STM32F1>
lib_ignore    = SPI
lib_deps      = ${common.lib_deps}
                SoftwareSerialM

#
# STM32F103RC
#
[env:STM32F103RC]
platform          = ${common_stm32f1.platform}
extends           = common_stm32f1
board             = genericSTM32F103RC
platform_packages = tool-stm32duino
monitor_speed     = 115200

#
# BigTree SKR Mini V1.1 / SKR mini E3 / SKR E3 DIP (STM32F103RCT6 ARM Cortex-M3)
#
#   STM32F103RC_btt ............. RCT6 with 256K
#   STM32F103RC_btt_USB ......... RCT6 with 256K (USB mass storage)
#   STM32F103RC_btt_512K ........ RCT6 with 512K
#   STM32F103RC_btt_512K_USB .... RCT6 with 512K (USB mass storage)
#

[env:STM32F103RC_btt]
platform          = ${common_stm32f1.platform}
extends           = env:STM32F103RC
extra_scripts     = ${common.extra_scripts}
                    buildroot/share/PlatformIO/scripts/STM32F103RC_SKR_MINI.py
build_flags       = ${common_stm32f1.build_flags}
                    -DDEBUG_LEVEL=0 -DSS_TIMER=4
monitor_speed     = 115200

[env:STM32F103RC_btt_512K]
platform          = ${common_stm32f1.platform}
extends           = env:STM32F103RC_btt
board_upload.maximum_size=524288
build_flags       = ${env:STM32F103RC_btt.build_flags} -DSTM32_FLASH_SIZE=512
